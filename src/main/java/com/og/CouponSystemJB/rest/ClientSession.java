package com.og.CouponSystemJB.rest;

/*----------------- IMPORTS -----------------------------------------------------------------------------------------*/

/*-------------------- springframework --------------------*/

import org.springframework.beans.factory.config.ConfigurableBeanFactory;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

/*-------------------- CouponSystemJB --------------------*/

import com.og.CouponSystemJB.service.EntityService;

/**
 * This will represent a Session in a our system a Client has. The ClientSession will hold a specific relevant
 * ServiceImpl inside its EntityService field and a long primitive representing the last time in milliseconds the
 * ClientSession has been accessed. EntityService will be used by the controllers to manipulate and extract data from
 * the DB that is specifically related to the Client this ClientSession is representing. lastAccessedMillis will let
 * the controllers and other services know whether this ClientSession has not been accessed in a long time and
 * therefor expired. Each ClientSession will be paired in the LoginController with a random token generated by the
 * RestConfiguration class. Every time a web User tries to send an HTTP request to the system after they logged in,
 * they will need the random token as part of their Cookie in order to verify them and match the correct
 * ClientSession to them.
 */
@Component
@Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)
public class ClientSession {

    /*----------------- Fields ---------------------------------------------------------------------------------------*/

    /* Placeholder for the relevant ServiceImpl for each Client. */
    private EntityService service;

    /* Last time this ClientSession was accessed or used in milliseconds. */
    private long lastAccessedMillis;

    /*----------------- Methods / Functions -----------------------------------------------------------------------------*/

    /*----------------- Getters / Setters ----------------------------------------------------------------------------*/

    /**
     * Getter for the ServiceImpl this Client holds. When this method is accessed, the lastAccessedMillis (last
     * time this ClientSession was accessed in milliseconds) will be updated.
     *
     * @return ServiceImpl for the relevant Client as EntityService.
     */
    public EntityService getService() {
        this.accessed();
        return service;
    }

    /**
     * Setter for the ServiceImpl this Client holds as an EntityService.
     *
     * @param service ServiceImpl for the specific Client this ClientSession is for.
     */
    public void setService(EntityService service) {
        this.service = service;
    }

    /**
     * Getter for lastAccessedMillis, e.g the last time in milliseconds this ClientSession has been accessed.
     *
     * @return long for the last time in milliseconds this ClientSession has been accessed.
     */
    public long getLastAccessedMillis() {
        return this.lastAccessedMillis;
    }

    /**
     * Setter for lastAccessedMillis, e.g the last time in milliseconds this ClientSession has been accessed.
     * When this method is called lastAccessedMillis will be set to System.currentTimeMillis().
     */
    public void accessed() {
        this.lastAccessedMillis = System.currentTimeMillis();
    }

}

